#!/bin/sh
# vim: set ts=4:
set -eu

. "$(dirname "$0")"/common.sh
cd "$CLONE_DIR"

[ -n "$TRAVIS_BRANCH" ] || die '$TRAVIS_BRANCH is not set'
[ -n "$REMOTE" ] || die '$REMOTE is not set'

REMOTE_DIR='/mnt/remote'
PACKAGES_DIR="$REMOTE_DIR/packages/$TRAVIS_BRANCH"
MOUNT_DIR="${ALPINE_ROOT}${REMOTE_DIR}"
REPOS='backports user bundles'

chmod 0600 .travis/deploy-key

mkdir -p "$MOUNT_DIR"

cleanup() {
	echo -n 'Unmounting remote FS...'
	fusermount -u "$MOUNT_DIR"
	echo ' done'
}
trap cleanup INT TERM EXIT

echo -n 'Mounting remote FS...'
sshfs "$REMOTE" "$MOUNT_DIR" \
	-o compression=yes \
	-o idmap=user \
	-o allow_other \
	-o IdentityFile="$(pwd)/.travis/deploy-key" \
	-o StrictHostKeyChecking=no
echo ' done'


echo '\n==> Building packages'

key_name="$(ls "$MOUNT_DIR"/.secret/*.rsa | head -n 1 | xargs basename)"
packager_privkey="$REMOTE_DIR/.secret/$key_name"

# Filter repositories which actually contain some APKBUILDs.
repos=''
for repo in $REPOS; do
	if [ -n "$(find $repo -maxdepth 2 -name APKBUILD)" ]; then
		repos="$repos $repo"
	fi
done
[ -n "$repos" ] || { echo 'No repositories found'; exit 0; }

alpine_run $ALPINE_USER <<-EOF
	mkdir -p ~/.abuild
	echo "PACKAGER_PRIVKEY=$packager_privkey" > ~/.abuild/abuild.conf

	REPODEST=$PACKAGES_DIR buildrepo -a $CLONE_DIR -d $PACKAGES_DIR $repos
EOF
